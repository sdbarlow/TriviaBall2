[{"/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/index.js":"1","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/App.js":"2","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Home.js":"3","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Profile.js":"4","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/NavBar.js":"5","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Leaderboard.js":"6","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/About.js":"7","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/GameField.js":"8","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/CharacterCard.js":"9"},{"size":309,"mtime":1678496910719,"results":"10","hashOfConfig":"11"},{"size":6546,"mtime":1678553585058,"results":"12","hashOfConfig":"11"},{"size":889,"mtime":1678507678035,"results":"13","hashOfConfig":"11"},{"size":1777,"mtime":1678502018195,"results":"14","hashOfConfig":"11"},{"size":668,"mtime":1678496914539,"results":"15","hashOfConfig":"11"},{"size":1080,"mtime":1678496912590,"results":"16","hashOfConfig":"11"},{"size":1681,"mtime":1678504900222,"results":"17","hashOfConfig":"11"},{"size":7550,"mtime":1678553598976,"results":"18","hashOfConfig":"11"},{"size":459,"mtime":1678496904225,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p2ue6h",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":5,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/index.js",[],[],"/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/App.js",["55","56","57"],[],"\nimport { useState, useEffect } from 'react'\nimport { Routes, Route, useNavigate } from \"react-router-dom\"\nimport { useRef } from 'react';\nimport './App.css'\nimport Home from './Home';\nimport Profile from './Profile';\nimport NavBar from './NavBar';\nimport Leaderboard from './Leaderboard';\nimport About from './About';\nimport GameField from './GameField';\n\n\n// function shuffleArray(array) {\n//   const newArray = [...array];\n//   for (let i = newArray.length - 1; i > 0; i--) {\n//     const j = Math.floor(Math.random() * (i + 1));\n//     [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n//   }\n//   return newArray;\n// }\n\nfunction App() {\n  let navigate = useNavigate();\n  const [count, setCount] = useState(0)\n\n  const[number, setNumber] = useState(1);\n  const[Characters, setCharacters] = useState([]);\n  const[playablecharacter, setPlayableCharacter] = useState(\"\")\n  const[joystickmoved, setJoystickMoved] = useState(true)\n\n  const [question, setQuestion] = useState({});\nconst [questionnumber, setQuestionNumber] = useState(0);\nconst [shuffledQuestionIndexes, setShuffledQuestionIndexes] = useState([]);\nconst [joystickStyle, setJoystickStyle] = useState({\n  height: '16vh',\n  width: '2vh',\n  position: 'absolute',\n  left: '33.2vh',\n  top: '76vh',\n  border: '2px solid black',\n  backgroundColor: 'gray',\n  zIndex: 1,\n  transform: 'rotate(150deg)',\n});\n\nconst [joystickBallStyle, setJoystickBallStyle] = useState({\n  height: '12vh',\n  width: '12vh',\n  backgroundColor: '#ffcc00',\n  position: 'absolute',\n  left: '21.3vh',\n  top: '65.9vh',\n  border: '2px solid black',\n  borderRadius: '100%',\n});\n\nconst fetchedQuestionsRef = useRef([]);\n\nuseEffect(() => {\n  fetch(\"https://triviaball-server.onrender.com/characters\")\n    .then(resp => resp.json())\n    .then(data => {\n      setCharacters(data)\n      let arr = [];\n      for (let i = 1; i <= 19; i++) {\n        arr.push(i);\n      }\n      // setShuffledQuestionIndexes(shuffleArray(arr));\n      setQuestionNumber(1);\n    });\n}, []);\n\nuseEffect(() => {\n  const fetchedQuestions = fetchedQuestionsRef.current;\n  if (shuffledQuestionIndexes.length > 0 && fetchedQuestions.includes(shuffledQuestionIndexes[questionnumber])) {\n    // question has already been fetched, so skip to the next one\n    setQuestionNumber(questionnumber + 1);\n  } else if (shuffledQuestionIndexes.length > 0) {\n    // fetch new question\n    fetch(`https://triviaball-server.onrender.com/Questions/${shuffledQuestionIndexes[questionnumber]}`)\n      .then(resp => resp.json())\n      .then(data => {\n        setQuestion(data);\n        fetchedQuestionsRef.current = [...fetchedQuestions, shuffledQuestionIndexes[questionnumber]];\n      });\n  }\n}, [questionnumber, shuffledQuestionIndexes]);\n\nuseEffect(() => {\n  setShuffledQuestionIndexes(shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56]));\n}, []);\n\n// The effect now only depends on the `Characters` state variable\nuseEffect(() => {\n  if (Characters.length > 0 && shuffledQuestionIndexes.length > 0) {\n    navigate('/');\n  }\n}, [Characters]);\n\nfunction shuffle(array) {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\n\nconsole.log(question)\n\nfunction handleJoystickClick(){\n  if(joystickmoved){\n setJoystickStyle({\n  height: '16vh',\n  width: '2vh',\n  position: 'absolute',\n  left: '47.2vh',\n  top: '76vh',\n  border: '2px solid black',\n  backgroundColor: 'gray',\n  zIndex: 1,\n  transform: 'rotate(30deg)',\n })\n\n setJoystickBallStyle({\n  height: '12vh',\n  width: '12vh',\n  backgroundColor: '#ffcc00',\n  position: 'absolute',\n  left: '48.3vh',\n  top: '65.9vh',\n  border: '2px solid black',\n  borderRadius: '100%',\n })\n setJoystickMoved(!joystickmoved)\n} else {\n  setJoystickStyle({\n    height: '16vh',\n  width: '2vh',\n  position: 'absolute',\n  left: '33.2vh',\n  top: '76vh',\n  border: '2px solid black',\n  backgroundColor: 'gray',\n  zIndex: 1,\n  transform: 'rotate(150deg)',\n  })\n  setJoystickBallStyle({\n    height: '12vh',\n  width: '12vh',\n  backgroundColor: '#ffcc00',\n  position: 'absolute',\n  left: '21.3vh',\n  top: '65.9vh',\n  border: '2px solid black',\n  borderRadius: '100%',\n  })\n  setJoystickMoved(!joystickmoved)\n}\n\n}\n\nuseEffect(() => {\n  fetch(`https://triviaball-server.onrender.com/characters/${number}`)\n      .then(resp => resp.json())\n      .then(data => setPlayableCharacter(data.image)) \n}, [number])\n\n  function handleClick(e,id){\n    console.log(e)\n    console.log(id)\n    setNumber(id);\n}\n\nfunction whenSubmit(val) {\n  fetch(\"https://triviaball-server.onrender.com/characters\", {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      image:val    \n    })\n  })\n  .then (resp => resp.json())\n  .then (data => {\n    setCharacters([...Characters, data])\n  })\n  document.getElementById('dialog-default').hideModal()\n}\n\nconsole.log(question)\n\n  return (\n    <>\n    <div className=\"left-bar\"></div>\n    <div className=\"left-bar-border\"></div>\n    <div className=\"right-bar\"></div>\n    <div className=\"right-bar-border\"></div>\n    <div id=\"outer\">\n      <div id=\"inner\">\n        <div id=\"gamescreen-border\"></div>\n          <div id=\"gamescreen\">\n            <div id=\"screenvisual\">\n            <Routes>\n              <Route path=\"/\" element={<Home playablecharacter={playablecharacter} NavBar={NavBar} />}/>\n              <Route path=\"/Profile\" element={<Profile handleClick={handleClick} number={number} whenSubmit={whenSubmit} Characters={Characters}/>}/>\n              <Route path=\"/Leaderboard\" element={<Leaderboard/>}/>\n              <Route path=\"/About\" element={<About/>}/>\n              <Route path=\"/Gamefield\" element={<GameField playablecharacter={playablecharacter}  questionnumber={questionnumber} setQuestionNumber={setQuestionNumber} question={question}/>}/>\n            </Routes>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"realArcade\"></div>\n      <div className=\"realArcade2\"></div>\n      <div id=\"button2\"></div>\n      <div style={joystickStyle}id=\"joystick\"></div>\n      <div id=\"joystickball\" style={joystickBallStyle}>\n        <div onClick={handleJoystickClick} id=\"joystickballcrescent1\"></div>\n      </div>\n      <div id=\"joystick-hole\"></div>\n    </>\n  )\n}\n\nexport default App\n","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Home.js",["58","59"],[],"import React from 'react';\nimport { useState, useEffect } from 'react'\nimport './Home.css'\nimport { Link } from 'react-router-dom'\n\nfunction Home({NavBar, playablecharacter}){\n\n    return (\n    <>\n    <NavBar playablecharacter={playablecharacter}/>\n        <div id=\"sky\">\n        <div class=\"cloud cloud-1\"></div>\n        <div class=\"cloud cloud-2\"></div>\n        <div class=\"cloud cloud-3\"></div>\n        <div class=\"cloud cloud-4\"></div>\n                <span id=\"trivia\" className=\"test19\">Trivia</span>\n                  <br></br>\n                <span id=\"ball\" className=\"test20\">Ball</span></div>\n                <h3 id=\"helpmessage\">Should be played on a larger screen!</h3>\n             <div id=\"ground\">\n                <Link to=\"/Gamefield\"><button type=\"button\" className=\"nes-btn is-primary\">Start Game</button></Link>\n             </div>\n    </>\n    )\n}\n\nexport default Home;","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Profile.js",["60","61"],[],"import React from 'react'\nimport { useState } from 'react'\nimport './Profile.css'\nimport CharacterCard from \"./CharacterCard\";\nimport { Link } from 'react-router-dom'\n\nfunction Profile({Characters, whenSubmit, handleClick, number}){\n    const [value, setValue] = useState(\"\")\n\n    const renderIcons = Characters.map((char)=> {return(<CharacterCard number={number} handleClick={handleClick} id={char.id} key={char.id} image={char.image}/>)})\n\n    function handleSubmit(e){\n        e.preventDefault();\n        whenSubmit(value)\n    }\nconsole.log(Characters.length)\n\n    return(<>\n        \n    <div className=\"parent\">\n    <div className=\"navbar8\"><Link to=\"/\"><a id=\"home\" class=\"nes-btn\" href=\"#\">Back</a></Link></div>\n        <span id=\"header\" className=\"nes-text is-primary\">Choose A Character</span>\n        <div className=\"grid\">\n            {renderIcons}\n                {Characters.length === 9 ? <></> : <><img className=\"image\" src=\"../Images/plusSign.png\" onClick={() => document.getElementById('dialog-default').showModal()}/></>}\n                <dialog class=\"nes-dialog\" id=\"dialog-default\">\n                        <form method=\"dialog\" onSubmit={handleSubmit}>\n                        <p class=\"title\">Enter An Image</p>\n                        <textarea value={value} onChange={(e) => setValue(e.target.value)} id=\"textarea_field\" class=\"nes-textarea\"></textarea>\n                        <menu class=\"dialog-menu\">\n                            <button type=\"button\" class=\"nes-btn\">Cancel</button>\n                            <button type=\"submit\" class=\"nes-btn is-primary\">Confirm</button>\n                        </menu>\n                        </form>\n                    </dialog>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Profile","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/NavBar.js",["62","63"],[],"import React from 'react'\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NavBar.css'\n\n\nfunction NavBar({Characters, playablecharacter}){\n    return(\n        <ul>\n            <li className=\"charIcon\"><Link style={{ textDecoration: 'none', color: \"black\" }} to=\"/Profile\"><img src={playablecharacter} className=\"nes-mario\"/></Link></li>\n            <li><Link className=\"links\" style={{ textDecoration: 'none', color: \"black\"}} to=\"/Leaderboard\">Leaderboard</Link></li>\n            <li><Link className=\"links\" style={{ textDecoration: 'none', color: \"black\" }} to=\"/About\">About</Link></li>\n        </ul>\n    )\n}\n\nexport default NavBar","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/Leaderboard.js",["64","65"],[],"import React from 'react'\nimport { useState } from 'react'\nimport './Leaderboard.css'\nimport { Link } from 'react-router-dom'\n\nfunction Leaderboard(){\n    return(<>\n    <div className=\"navbar3\"><Link to=\"/\"><a id=\"home\" class=\"nes-btn\" href=\"#\">Back</a></Link></div>\n<div className=\"parent1\">\n<div id=\"leaderboard\" class=\"nes-container with-title is-centered\">\n  <p className=\"title\">Leaderboard</p>\n  <ul id=\"list-container\">\n    <li className=\"listitem1\"><i id=\"troph\" class=\"nes-icon trophy is-small\"></i>hotshotKSGator15</li><li className=\"listitem7\">100000000</li>\n    <li className=\"listitem2\">JoeNotExotic72</li><li className=\"listitem8\">10000000</li>\n    <li className=\"listitem3\">TickleMeElmo</li><li className=\"listitem9\">1000000</li>\n    <li className=\"listitem4\">ShaquilleOatmeal</li><li className=\"listitem10\">100000</li>\n    <li className=\"listitem5\">MagicSchoolBusDropout</li><li className=\"listitem11\">10000</li>\n    <li className=\"listitem6\">NoMomICantPauseIt</li><li className=\"listitem12\">1000</li>\n  </ul>\n</div>\n</div>\n</>\n    )\n}\n\nexport default Leaderboard;","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/About.js",["66","67","68","69","70","71","72","73","74","75","76"],[],"import React from 'react'\nimport { useState } from 'react'\nimport './About.css'\nimport { Link } from 'react-router-dom'\n\nfunction About(){\n    return (<>\n        <div className=\"navbar4\"><Link to=\"/\"><a id=\"home\" class=\"nes-btn\" href=\"#\">Back</a></Link></div>\n    <div className=\"parent2\">\n    <div id=\"leaderboard1\" class=\"nes-container with-title is-centered\">\n      <p className=\"title\">About</p>\n      <div id=\"aboutcontainer\">\n        <div id=\"topheader\">Created By Seth Barlow</div>\n        <div id=\"thelogos\"><a target=\"_blank\" href=\"https://github.com/sdbarlow\"><i class=\"nes-icon github is-medium\"></i></a><p className=\"psuedopadding\">dd</p><a target=\"_blank\" href=\"https://medium.com/@sethdbarlow\"><i class=\"nes-icon medium is-medium\"></i></a><p className=\"psuedopadding\">dd</p><a target=\"_blank\" href=\"https://www.linkedin.com/in/sethdbarlow/\"><i class=\"nes-icon linkedin is-medium\"></i></a><p className=\"psuedopadding\">dd</p><a target=\"_blank\" href=\"mailto:sethdbarlow@gmail.com\"><i class=\"nes-icon gmail is-medium\"></i></a></div>\n        <div id=\"middleheader\">Languages Used</div>\n        <div id=\"theimgs\" ><img id=\"firstimg\" className='imagelogos' src=\"./images/HTML5.png\"/><img id=\"toowide\" className='imagelogos' src=\"./images/CSS.png\"/><img className='imagelogos' src=\"./images/JavaScript.png\"/><img id=\"toowide2\" className='imagelogos' src=\"./images/React.png\"/></div>\n        <div id=\"bottomheader\">Framework Used</div>\n        <div id=\"nesbadge\"><a target=\"_blank\" href=\"https://nostalgic-css.github.io/NES.css/#\" class=\"nes-badge\">\n  <span class=\"is-success\">NES.css</span>\n</a></div>\n      </div>\n    </div>\n    </div>\n    </>\n    )\n}\n\nexport default About;","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/GameField.js",["77","78","79","80","81","82","83","84"],[],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport './GameField.css'\n\nfunction GameField({ question, setQuestionNumber, questionnumber, playablecharacter }){\n  const [timeRemaining, setTimeRemaining] = useState(12);\n  const [restart, setRestart] = useState(true)\n  const [questionorder, setQuestionOrder] = useState([])\n  const[downtracker, setDownTracker] = useState(1);\n  const[characterposition, setCharacterPosition] = (useState(\"21%\"));\n const[windetermine, setWinDetermine] = (useState(false))\n const[progressbar, setProgressBar] = useState(20)\n const[lossdetermine, setLossDetermine] = useState(false);\n\nconsole.log(question)\n\n const navigate = useNavigate();\n\n  useEffect(() => {\n    if(characterposition === \"92%\"){\n      setWinDetermine(!windetermine)\n    }\n  }, [characterposition])\n\n  useEffect(() => {\n    if(progressbar === 100){\n    const timer = setTimeout(() => {\n      navigate('/');\n    }, 2000);\n  \n    return () => {\n      clearTimeout(timer);\n    }};\n  }, [windetermine]);\n\nuseEffect(() => {\n  if(downtracker > 4 || characterposition == \"-2%\") {\n    setLossDetermine(!lossdetermine)\n    const timer = setTimeout(() => {\n      navigate('/');\n    }, 2000);\n  \n    return () => {\n      clearTimeout(timer);\n    }\n  }\n}, [progressbar, downtracker])\n\n  useEffect(() => {\n    if(timeRemaining === 0){\n      if(characterposition === \"13%\"){\n        const initialPercentage = parseInt(characterposition); \n        const newPercentage = initialPercentage - 15;\n        setCharacterPosition(`${newPercentage}%`);\n        setProgressBar(progressbar - 10);\n      }else{\n        const initialPercentage = parseInt(characterposition); \n        const newPercentage = initialPercentage - 8;\n        setCharacterPosition(`${newPercentage}%`);\n        setProgressBar(progressbar - 10);\n      }\n    }\n  }, [timeRemaining])\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTimeRemaining(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [restart]);\n  const minutes = Math.floor(timeRemaining / 60);\n  const seconds = timeRemaining % 60;\n  const isRed = timeRemaining <= 5;\n  const style = isRed ? { color: 'red' } : {};\n  const finished = -1;\n\n  function handleClick(e){\n      console.log(e.target.id)\n      console.log(e.target.textContent)\n      setTimeRemaining(12)\n        setRestart(!restart);\n        setQuestionNumber(questionnumber+1)\n        if(e.target.id === e.target.textContent){\n          if(characterposition > \"70.9%\"){\n            const initialPercentage = parseInt(characterposition); \n            const newPercentage = initialPercentage + 15;\n            setCharacterPosition(`${newPercentage}%`);\n            setProgressBar(progressbar + 10);\n          }else{\n            const initialPercentage = parseInt(characterposition); \n            const newPercentage = initialPercentage + 8;\n            setCharacterPosition(`${newPercentage}%`);\n            setProgressBar(progressbar + 10);\n          }\n        }else{\n            setDownTracker(downtracker + 1)\n        }\n      }\n  \n\n      \n\n\n  function whenChanged(){\n    if (finished === timeRemaining){\n        setTimeRemaining(12)\n        setRestart(!restart);\n        setQuestionNumber(questionnumber+1)\n    } else {\n\n    }\n  }\n\n  console.log(question)\n\n  if(Object.keys(question).length === 0)\n    return <div>Out Of Questions Refresh Page!!</div>\n    return (\n    <>\n        <div id=\"header1\"><span id=\"downtracker\">Down:{downtracker}</span><progress id=\"progress-bar\" class=\"nes-progress is-success\" value={progressbar} max=\"100\"></progress><div onChange={whenChanged()} className=\"countdown\" style={style}>{minutes}:{seconds < 10 ? '0' : ''}{seconds}</div></div>\n        <div id=\"sky1\">\n          {lossdetermine ? <><div id=\"lossmessage\">\n            <div className=\"item1\"><i class=\"nes-icon is-large is-half heart\"></i></div>\n            <div className=\"item2\"><i class=\"nes-icon is-large heart is-empty\"></i></div>\n            <div className=\"item3\"><i class=\"nes-icon is-large heart is-empty\"></i></div>\n            <div className=\"item5\"><h1 id=\"youwin\">You Lost!!</h1></div>\n          </div> </> : <></>}\n          {windetermine ? <><div id=\"winmessage\">\n            <div className=\"item1\"><i class=\"nes-icon trophy is-large\"></i></div>\n            <div className=\"item2\"><i class=\"nes-icon trophy is-large\"></i></div>\n            <div className=\"item3\"><i class=\"nes-icon trophy is-large\"></i></div>\n            <div className=\"item4\"><h1 id=\"youwin\">You Win!!</h1></div>\n          </div> </> : <></>}\n        <table id=\"tables\">\n            <tr>\n                <th colspan=\"2\" id=\"mainquestion\"><span>{question.Q}</span></th>\n            </tr>\n            <tr>\n            <td  id=\"topdata\" className=\"datas\"><button onClick={(e) => handleClick(e)} id={question.RA} value={question.PA[0]} type=\"button\" class=\"nes-btn is-primary\">{question.PA[0]}</button></td>\n            <td  id=\"topdata\" className=\"datas\"><button onClick={(e) => handleClick(e)} id={question.RA} value={question.PA[1]} type=\"button\" class=\"nes-btn is-primary\">{question.PA[1]}</button></td>\n            </tr>\n            <tr>\n            <td  className=\"datas\"><button onClick={(e) => handleClick(e)} id={question.RA} value={question.PA[2]} type=\"button\" class=\"nes-btn is-primary\">{question.PA[2]}</button></td>\n            <td  className=\"datas\"><button onClick={(e) => handleClick(e)} id={question.RA} value={question.PA[3]} type=\"button\" class=\"nes-btn is-primary\">{question.PA[3]}</button></td>\n            </tr>\n        </table> \n        </div>\n        <div id=\"ground1\">\n        <div id=\"character-container\">\n          <img id=\"characterguy\"  style={{marginLeft:characterposition}} src={playablecharacter}/>\n        </div>\n        <div id=\"field\">\n      <div id=\"endzone-left\"></div>\n      <div id=\"zone-1\">\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"number\">1</h2>\n      </div>\n      <div id=\"zone-2\">\n        <h2 id=\"uone\">1</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"zero\">0</h2>\n        <h2 id=\"number\">2</h2>\n      </div>\n      <div id=\"zone-3\">\n        <h2 id=\"utwo\">2</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"two-zero\">0</h2>\n        <h2 id=\"number\">3</h2>\n      </div>\n      <div id=\"zone-4\">\n        <h2 id=\"uthree\">3</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"three-zero\">0</h2>\n        <h2 id=\"number\">4</h2>\n      </div>\n      <div id=\"zone-5\">\n        <h2 id=\"ufour\">4</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"four-zero\">0</h2>\n        <h2 id=\"number\">5</h2>\n      </div>\n      <div id=\"zone-6\">\n        <h2 id=\"ufive\">5</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"five-zero\">0</h2>\n        <h2 id=\"number\">4</h2>\n      </div>\n      <div id=\"zone-7\">\n        <h2 id=\"ufour2\">4</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"hfour-zero\">0</h2>\n        <h2 id=\"number\">3</h2>\n      </div>\n      <div id=\"zone-8\">\n        <h2 id=\"uthree2\">3</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"hthree-zero\">0</h2>\n        <h2 id=\"number\">2</h2>\n      </div>\n      <div id=\"zone-9\">\n        <h2 id=\"utwo2\">2</h2>\n        <h2 className=\"uzero\">0</h2>\n        <h2 id=\"htwo-zero\">0</h2>\n        <h2 id=\"number\">1</h2>\n      </div>\n      <div id=\"zone-10\">\n        <h2 id=\"uone2\">1</h2>\n        <h2 id=\"hone-zero\">0</h2>\n      </div>\n      <div id=\"endzone-right\"></div>\n    </div>\n        </div>\n    </>\n    )\n}\n\n\nexport default GameField;","/Users/sethbarlow/Development/code/phase-2/TriviaBall/src/CharacterCard.js",["85","86","87"],[],"import React from 'react'\nimport { useState } from 'react'\nimport './CharacterCard.css'\n\nfunction CharacterCard({image, id, handleClick, number}){\n\n\n    return(\n        <>\n            {number === id ? <div className=\"image-container\">\n                <img id={id} className=\"image\" src={image} />\n            </div> : <img id={id} value={id} onClick={(e)=>handleClick(e,id)} className=\"image\" src={image} />}\n        </>\n    )\n}\n\nexport default CharacterCard;",{"ruleId":"88","severity":1,"message":"89","line":25,"column":10,"nodeType":"90","messageId":"91","endLine":25,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":25,"column":17,"nodeType":"90","messageId":"91","endLine":25,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":99,"column":4,"nodeType":"95","endLine":99,"endColumn":16,"suggestions":"96"},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"98","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":21,"column":43,"nodeType":"101","endLine":21,"endColumn":81},{"ruleId":"102","severity":1,"message":"103","line":25,"column":54,"nodeType":"101","endLine":25,"endColumn":177},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":10,"column":109,"nodeType":"101","endLine":10,"endColumn":161},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":8,"column":43,"nodeType":"101","endLine":8,"endColumn":81},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":8,"column":47,"nodeType":"101","endLine":8,"endColumn":85},{"ruleId":"104","severity":1,"message":"105","line":14,"column":28,"nodeType":"101","messageId":"106","endLine":14,"endColumn":82,"fix":"107"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":162,"nodeType":"101","messageId":"106","endLine":14,"endColumn":220,"fix":"108"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":300,"nodeType":"101","messageId":"106","endLine":14,"endColumn":367,"fix":"109"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":449,"nodeType":"101","messageId":"106","endLine":14,"endColumn":504,"fix":"110"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":28,"nodeType":"101","endLine":16,"endColumn":96},{"ruleId":"102","severity":1,"message":"103","line":16,"column":96,"nodeType":"101","endLine":16,"endColumn":161},{"ruleId":"102","severity":1,"message":"103","line":16,"column":161,"nodeType":"101","endLine":16,"endColumn":220},{"ruleId":"102","severity":1,"message":"103","line":16,"column":220,"nodeType":"101","endLine":16,"endColumn":288},{"ruleId":"104","severity":1,"message":"105","line":18,"column":28,"nodeType":"101","messageId":"106","endLine":18,"endColumn":114,"fix":"111"},{"ruleId":"88","severity":1,"message":"112","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":23},{"ruleId":"88","severity":1,"message":"113","line":9,"column":25,"nodeType":"90","messageId":"91","endLine":9,"endColumn":41},{"ruleId":"93","severity":1,"message":"114","line":24,"column":6,"nodeType":"95","endLine":24,"endColumn":25,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"116","line":35,"column":6,"nodeType":"95","endLine":35,"endColumn":20,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":38,"column":43,"nodeType":"120","messageId":"121","endLine":38,"endColumn":45},{"ruleId":"93","severity":1,"message":"122","line":48,"column":4,"nodeType":"95","endLine":48,"endColumn":30,"suggestions":"123"},{"ruleId":"93","severity":1,"message":"124","line":64,"column":6,"nodeType":"95","endLine":64,"endColumn":21,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"103","line":151,"column":11,"nodeType":"101","endLine":151,"endColumn":99},{"ruleId":"88","severity":1,"message":"97","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":11,"column":17,"nodeType":"101","endLine":11,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":12,"column":22,"nodeType":"101","endLine":12,"endColumn":111},"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'shuffledQuestionIndexes.length'. Either include them or remove the dependency array.","ArrayExpression",["126"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"127","text":"128"},{"range":"129","text":"128"},{"range":"130","text":"128"},{"range":"131","text":"128"},{"range":"132","text":"128"},"'questionorder' is assigned a value but never used.","'setQuestionOrder' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'windetermine'. Either include it or remove the dependency array. You can also do a functional update 'setWinDetermine(w => ...)' if you only need 'windetermine' in the 'setWinDetermine' call.",["133"],"React Hook useEffect has missing dependencies: 'navigate' and 'progressbar'. Either include them or remove the dependency array.",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'characterposition', 'lossdetermine', and 'navigate'. Either include them or remove the dependency array. You can also do a functional update 'setLossDetermine(l => ...)' if you only need 'lossdetermine' in the 'setLossDetermine' call.",["135"],"React Hook useEffect has missing dependencies: 'characterposition' and 'progressbar'. Either include them or remove the dependency array. You can also do a functional update 'setProgressBar(p => ...)' if you only need 'progressbar' in the 'setProgressBar' call.",["136"],{"desc":"137","fix":"138"},[569,569]," rel=\"noreferrer\"",[707,707],[854,854],[991,991],[1553,1553],{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [Characters, navigate, shuffledQuestionIndexes.length]",{"range":"147","text":"148"},"Update the dependencies array to be: [characterposition, windetermine]",{"range":"149","text":"150"},"Update the dependencies array to be: [navigate, progressbar, windetermine]",{"range":"151","text":"152"},"Update the dependencies array to be: [progressbar, downtracker, characterposition, lossdetermine, navigate]",{"range":"153","text":"154"},"Update the dependencies array to be: [characterposition, progressbar, timeRemaining]",{"range":"155","text":"156"},[3183,3195],"[Characters, navigate, shuffledQuestionIndexes.length]",[847,866],"[characterposition, windetermine]",[1052,1066],"[navigate, progressbar, windetermine]",[1313,1339],"[progressbar, downtracker, characterposition, lossdetermine, navigate]",[1883,1898],"[characterposition, progressbar, timeRemaining]"]